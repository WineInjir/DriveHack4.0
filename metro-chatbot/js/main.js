const API_TOKEN = 'MDE5OWU3NDUtOTYzMC03OTA4LWFmODUtMTBhZmVmYWJhMWY5OjRiYTFhYzUxLWE1YWQtNDQ5YS1iNDBkLWJhYjZkY2UwZGZjMA==';

const systemPrompt = {
  role: "system",
  content: `–¢—ã ‚Äî AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É –º–µ—Ç—Ä–æ–ø–æ–ª–∏—Ç–µ–Ω—É. –û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –º–µ—Ç—Ä–æ. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–º–µ ‚Äî –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å. –û—Ç–≤–µ—á–∞–π –∂–∏–≤—ã–º, —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º, –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π —Å–ª—É–∂–±—ã.`
};

let messages = [systemPrompt];

// === TTS: –û–∑–≤—É—á–∫–∞ –æ—Ç–≤–µ—Ç–∞ ===
function speak(text) {
  const utterance = new SpeechSynthesisUtterance(text);
  utterance.lang = 'ru-RU';
  utterance.rate = 1;
  window.speechSynthesis.speak(utterance);
}

// === –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ (STT) ===
const micBtn = document.getElementById('micBtn');
micBtn.addEventListener('click', startRecognition);

function startRecognition() {
  if (!('webkitSpeechRecognition' in window)) {
    alert("–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏.");
    return;
  }

  const recognition = new webkitSpeechRecognition();
  recognition.lang = 'ru-RU';
  recognition.interimResults = false;
  recognition.maxAlternatives = 1;

  recognition.start();

  recognition.onstart = () => {
    micBtn.innerText = "üéß";
  };

  recognition.onerror = (event) => {
    alert("–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: " + event.error);
    micBtn.innerText = "üé§";
  };

  recognition.onend = () => {
    micBtn.innerText = "üé§";
  };

  recognition.onresult = (event) => {
    const result = event.results[0][0].transcript;
    document.getElementById('userInput').value = result;
  };
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ GigaChat ===
async function sendMessage() {
  const input = document.getElementById('userInput');
  const userText = input.value.trim();
  if (!userText) return;

  addMessage("–í—ã", userText, "user");
  messages.push({ role: "user", content: userText });
  input.value = '';

  const response = await fetch("https://gigachat.devices.sberbank.ru/api/v1/chat/completions", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${API_TOKEN}`
    },
    body: JSON.stringify({
      model: "GigaChat",
      messages: messages,
      temperature: 0.7
    })
  });

  const data = await response.json();

  if (data.choices && data.choices[0]) {
    const botReply = data.choices[0].message.content;
    messages.push({ role: "assistant", content: botReply });
    addMessage("–ë–æ—Ç", botReply, "bot");
    speak(botReply);
  } else {
    addMessage("–ë–æ—Ç", "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞.", "bot");
  }
}

// === –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π ===
function addMessage(sender, text, cssClass) {
  const chat = document.getElementById("chat");
  const messageEl = document.createElement("div");
  messageEl.className = `message ${cssClass}`;
  messageEl.innerHTML = `<strong>${sender}:</strong> ${text}`;
  chat.appendChild(messageEl);
  chat.scrollTop = chat.scrollHeight;
}
